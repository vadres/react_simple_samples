const INITIAL_EDITOR = `# Marked in the browser.
## Clean and Higienic
### Links       
Check [GitHub flavored markdown](https://github.github.com/gfm/#link-reference-definitions 'Reference markup')
### Codes 
 \` let [ destructuring, let, const ] = [ 'destructuring', 'let', 'const' ] \` 
 \` const view = [...array, changed ]\`  
 \`\`\`  
   let man = new Human('male') // let porquee vareia ;)  
   const woman = new Human('female') // const porquee nÃ£o vareeia :O \`\`\` 
### Images 
![image](https://media.istockphoto.com/photos/plant-growing-picture-id510222832?k=6&m=510222832&s=612x612&w=0&h=Pzjkj2hf9IZiLAiXcgVE1FbCNFVmKzhdcT98dcHSdSk= 'image beaulty')  ![image](https://i.pinimg.com/originals/94/dd/57/94dd573e4b4de604ea7f33548da99fd6.jpg 'image beaulty 2') ![image](https://images.pexels.com/photos/34950/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350 'image beaulty 3')   
### Block quotes 
># Foo  
> bar  
> baz 
### Lists 
 - item #1  
 - item #2 

Rendered by **marked**`

marked.setOptions({
  breaks: true,
});
// App passa todos os estados pros seus filhos
// via props, filhos mostram na tela  
class App extends React.Component {
  constructor(props){
    super(props)
    this.state = {
      editor: INITIAL_EDITOR,
      preview: marked(INITIAL_EDITOR),
    }
    this.handleTextareaKeyUp = this.handleTextareaKeyUp.bind(this)
  }
  
  componentDidMount(){
    this.setPreview() 
  }
    
  handleTextareaKeyUp(event){
    let editorContent = event.target.value
    this.setState({
      ...this.state,
      preview: marked(editorContent)
    })
  }
  
  render() { 
    return (
      <div>
        <Editor handleKeyUp={this.handleTextareaKeyUp} editor={this.state.editor} />
        <Preview preview={this.state.preview} />
      </div>
    )
  }
}

class Editor extends React.Component {
  constructor(props){
    super(props)
  }
  
  render(){
    return (
      <section className="block" id="editor-wrapper">
        <h3>Editor GitHub flavored markdown</h3>
        <div className="content">
          <textarea onKeyUp={this.props.handleKeyUp} id="editor">{this.props.editor}</textarea>
        </div>
      </section>  
    )
  }
}

class Preview extends React.Component {
  constructor(props){
    super(props)
  }
  
  render(){
    return (
      <section className="block" id="preview-wrapper">
        <h3>Preview</h3>
        <div id="preview" dangerouslySetInnerHTML={ { __html: this.props.preview } }></div>
      </section>  
    )
  }
}

ReactDOM.render(<App />, document.getElementById('app'))